# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
    - master

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  #- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  #  clean: false
  #  fetchDepth: 1
  - script: ./gradlew --version
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      options: '--scan --warning-mode=all -Dplatform.tooling.support.tests.enabled=true'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'build'
#  - job: Mac_OS
#    pool:
#      vmImage: 'macOS-10.13'
#  - job: Windows
#    pool:
#      vmImage: 'windows-2019