apply plugin: 'org.asciidoctor.convert'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
	includeClassNamePattern '.+(Tests|Demo)$'
	tags {
		exclude 'exclude'
	}
	logManager 'org.apache.logging.log4j.jul.LogManager'
}

/*
test {
	scanForTestClasses = false
	include(['example/DocumentationTestSuite.class'])
}
*/

dependencies {
	testCompile(project(':junit-jupiter-api'))
	testCompile(project(':junit-platform-runner'))
	testCompile(project(':junit-platform-launcher'))

	// Include junit-platform-console so that the JUnit Gradle plugin
	// uses the local version of the ConsoleLauncher.
	testRuntime(project(':junit-platform-console'))

	testRuntime(project(':junit-vintage-engine'))
	testRuntime(project(':junit-jupiter-engine'))
	testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}

asciidoctor {
	separateOutputDirs = false
	sources { include 'index.adoc' }
	attributes	'jupiter-version': project.property('version'),
				'platform-version': project.property('platformVersion'),
				'vintage-version': project.property('vintageVersion'),
				'junit4-version': project.property('junit4Version'),
				'release-branch': project.property('releaseBranch'),
				'revnumber' : project.version,
				'mainDir': project.sourceSets.main.java.srcDirs[0],
				'testDir': project.sourceSets.test.java.srcDirs[0],
				'source-highlighter': 'highlightjs',
				'highlightjs-theme': 'github',
				'tabsize': '4',
				'imagesdir': 'images',
				'toc': 'left',
				'icons': 'font',
				'setanchors': 'true',
				'idprefix': '',
				'idseparator': '-',
				'docinfo1': 'true'
}
