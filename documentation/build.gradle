apply plugin: 'org.asciidoctor.convert'
apply plugin: "org.ajoberstar.github-pages"
apply plugin: 'org.junit.gen5.gradle'

uploadArchives.enabled = false

junit5 {
	runJunit4 false
	matchClassName '.*Test[s]'
	reportFile file('build/test-results/JUNIT5-Tests.xml')
}

// The JUnit5Plugin registers the junit5Test task *after* the project has
// been evaluated. We can therefore only configure the junit5Test task
// once it actually exists.
afterEvaluate {

	// Ensure that log4j2 is properly configured.
	junit5Test.systemProperty 'java.util.logging.manager', 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
	testCompile(project(':junit-commons'))
	testCompile(project(':junit-console'))
	testCompile(project(':junit-engine-api'))
	testCompile(project(':junit-launcher'))
	testCompile(project(':junit4-engine'))
	testCompile(project(':junit4-runner'))
	testCompile(project(':junit5-api'))
	testCompile(project(':junit5-engine'))

	testRuntime("org.apache.logging.log4j:log4j-core:${log4JVersion}")
	testRuntime("org.apache.logging.log4j:log4j-jul:${log4JVersion}")
}

githubPages {
	repoUri = 'https://github.com/junit-team/junit5.git'

	credentials {
		username = project.hasProperty('githubToken') ? project.githubToken : ''
		password = ''
	}

	pages {
		from file(asciidoctor.outputDir.path + '/html5')
		from file('src/docs/static')
	}
}

publishGhPages.dependsOn asciidoctor

asciidoctor {
	attributes	'junit-version': project.version,
				'revnumber' : project.version,
				'mainDir': project.sourceSets.main.java.srcDirs[0],
				'testDir': project.sourceSets.test.java.srcDirs[0],
				'source-highlighter': 'highlightjs',
				'highlightjs-theme': 'github',
				'tabsize': '4',
				'imagesdir': 'images',
				'toc': 'left',
				'icons': 'font',
				'setanchors': 'true',
				'idprefix': '',
				'idseparator': '-',
				'docinfo1': 'true'
}
